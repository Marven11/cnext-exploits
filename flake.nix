{
  description = "Python venv development template";

  inputs = {
    utils.url = "github:numtide/flake-utils";
    nixpkgsOld.url = "https://github.com/NixOS/nixpkgs/archive/b4e193a23a1c5d8794794e65cabf1f1135d07fd9.tar.gz";
    pentestNixos.url = "github:Marven11/PentestNixOS/main";
  };

  outputs =
    { self
    , nixpkgs
    , nixpkgsOld
    , pentestNixos
    , utils
    , ...
    }:
    utils.lib.eachDefaultSystem (system:
    let
      pkgs = import nixpkgs { inherit system; };
      pythonPackages = pkgs.python3Packages;
      pentest = pentestNixos.packages."${system}";
    in
    {
      devShells.default = pkgs.mkShell {
        name = "python-venv";
        venvDir = "./.venv-nixos";
        buildInputs = [
          pythonPackages.python
          pythonPackages.venvShellHook
          pythonPackages.notebook
          pythonPackages.ipython
          pythonPackages.fire
          pythonPackages.rich
          pythonPackages.pwntools # for pwnlib
        ];
        postVenvCreation = ''
          unset SOURCE_DATE_EPOCH
          pip install -r requirements.txt
        '';
        postShellHook = ''
          # allow pip to install wheels
          unset SOURCE_DATE_EPOCH
        '';
      };
      packages.default =
        with pkgs.python3Packages; buildPythonApplication rec {
          pname = "cnext-exploits";
          # it takes minutes
          doCheck = false;

          build-system = [
            setuptools
            setuptools-scm
          ];

          dependencies = [
            pwntools
            fire
            rich
          ];
          src = ./.;
          version = "0.1.0";
        };

    });
}
